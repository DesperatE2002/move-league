const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function checkMiray() {
  try {
    console.log('üîç Miray\'ƒ±n verilerini kontrol ediliyor...\n');

    // Miray'ƒ± bul
    const miray = await prisma.user.findFirst({
      where: {
        email: 'miray@mleague.com'
      },
      include: {
        initiatedBattles: {
          select: {
            id: true,
            status: true,
            winnerId: true,
            scores: true,
            createdAt: true
          }
        },
        challengedBattles: {
          select: {
            id: true,
            status: true,
            winnerId: true,
            scores: true,
            createdAt: true
          }
        },
        wonBattles: {
          select: {
            id: true,
            status: true,
            createdAt: true
          }
        }
      }
    });

    if (!miray) {
      console.log('‚ùå Miray bulunamadƒ±!');
      return;
    }

    console.log('‚úÖ Miray bulundu:');
    console.log(`   üìß Email: ${miray.email}`);
    console.log(`   üë§ ƒ∞sim: ${miray.name}`);
    console.log(`   ‚≠ê Rating: ${miray.rating}`);
    console.log(`   üéØ Rol: ${miray.role}`);
    console.log('');

    console.log('üìä Battle ƒ∞statistikleri:');
    console.log(`   Ba≈ülattƒ±ƒüƒ± battle'lar: ${miray.initiatedBattles.length}`);
    console.log(`   Davet edildiƒüi battle'lar: ${miray.challengedBattles.length}`);
    console.log(`   Kazandƒ±ƒüƒ± battle'lar: ${miray.wonBattles.length}`);
    console.log('');

    const allBattles = [...miray.initiatedBattles, ...miray.challengedBattles];
    const completedBattles = allBattles.filter(b => b.status === 'COMPLETED');
    
    console.log('üèÅ Tamamlanan Battle\'lar:');
    if (completedBattles.length === 0) {
      console.log('   ‚ö†Ô∏è Hi√ß tamamlanmƒ±≈ü battle yok!');
    } else {
      completedBattles.forEach((battle, idx) => {
        console.log(`   ${idx + 1}. Battle ID: ${battle.id}`);
        console.log(`      Status: ${battle.status}`);
        console.log(`      Winner ID: ${battle.winnerId}`);
        console.log(`      Miray kazandƒ± mƒ±? ${battle.winnerId === miray.id ? '‚úÖ EVET' : '‚ùå HAYIR'}`);
        console.log(`      Scores: ${battle.scores ? 'VAR' : 'YOK'}`);
        if (battle.scores) {
          console.log(`      Score detay: ${JSON.stringify(battle.scores)}`);
        }
        console.log('');
      });
    }

  } catch (error) {
    console.error('‚ùå Hata:', error);
  } finally {
    await prisma.$disconnect();
  }
}

checkMiray();
